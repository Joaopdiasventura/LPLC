const canvas = document.getElementById('labirintoCanvas');
const ctx = canvas.getContext('2d');

const tamanhoCelula = 30;
const corFundo = '#000';
const corParede = '#00FF0F';
const corJogador = '#f00';

const labirinto = [
    "####################################################################################################",
    "#                                                                                                  #",
    "#                                                                                                  #",
    "#                                                                                                  #",
    "#                                                                                                  #",
    "# #                                                                                                #",
    "####################################################################################################",
    "####################################################################################################",
    "####################################################################################################",
    "####################################################################################################",
    "####################################################################################################",
    "####################################################################################################",
    "####################################################################################################",
    "####################################################################################################",
    "####################################################################################################",
    "####################################################################################################",
    "####################################################################################################",
    "####################################################################################################",
    "####################################################################################################",
    "####################################################################################################",
    "####################################################################################################",
    "####################################################################################################",
    "####################################################################################################",
    "####################################################################################################",
    "####################################################################################################",
    "####################################################################################################",
    "####################################################################################################",
    "####################################################################################################",
    "####################################################################################################",
    "####################################################################################################",
    "####################################################################################################",
    "####################################################################################################",
    "####################################################################################################",
    "####################################################################################################",
    "####################################################################################################",
    "####################################################################################################",
    "####################################################################################################",
    "####################################################################################################",
    "####################################################################################################",
    "####################################################################################################",
    "####################################################################################################",
    "####################################################################################################",
    "####################################################################################################",
    "####################################################################################################",
    "####################################################################################################",
    "####################################################################################################",
    "####################################################################################################",
    "####################################################################################################",
    "####################################################################################################",
    "####################################################################################################",
    "####################################################################################################",
    "####################################################################################################",
    "####################################################################################################",
    "####################################################################################################",
    "####################################################################################################",
    "####################################################################################################",
    "####################################################################################################",
    "####################################################################################################",
    "####################################################################################################",
    "####################################################################################################",
    "####################################################################################################",
    "####################################################################################################",
    "####################################################################################################",
    "####################################################################################################",
    "####################################################################################################",
    "####################################################################################################",
    "####################################################################################################",
    "####################################################################################################",
    "####################################################################################################",
    "####################################################################################################",
    "####################################################################################################",
    "####################################################################################################",
    "####################################################################################################",
    "####################################################################################################",
    "####################################################################################################",
    "####################################################################################################",
    "####################################################################################################",
    "####################################################################################################",
    "####################################################################################################",
    "####################################################################################################",
    "####################################################################################################",
    "####################################################################################################",
    "####################################################################################################",
    "####################################################################################################",
    "####################################################################################################",
    "####################################################################################################",
    "####################################################################################################",
    "####################################################################################################",
    "####################################################################################################",
    "####################################################################################################",
    "####################################################################################################",
    "####################################################################################################",
    "####################################################################################################",
    "####################################################################################################",
    "####################################################################################################",
    "####################################################################################################",
    "####################################################################################################",
    "####################################################################################################",
    "####################################################################################################",
    "####################################################################################################",
];

class Jogador {
    constructor(x, y) {
        this.x = x;
        this.y = y;
    }

    verificaColisao(dx, dy) {

        const novoX = this.x + dx;
        const novoY = this.y + dy;

        if (labirinto[novoY][novoX] !== '#') {
            return true;
        }

        return false;
    }

    mover(dx, dy) {
        if (this.verificaColisao(dx, dy)) {
            const novoX = this.x + dx;
            const novoY = this.y + dy;


            if (dx > 0 && camera.x + camera.largura < labirinto[0].length) {
                camera.x++;
            } else if (dx < 0 && camera.x > 0) {
                camera.x--;
            }

            if (dy > 0 && camera.y + camera.altura < labirinto.length) {
                camera.y++;
            } else if (dy < 0 && camera.y > 0) {
                camera.y--;
            }

            this.x += dx;
            this.y += dy;

        }
    }

    desenhar(cameraX, cameraY) {
        ctx.fillStyle = corJogador;
        ctx.fillRect((this.x - cameraX) * tamanhoCelula, (this.y - cameraY) * tamanhoCelula, tamanhoCelula, tamanhoCelula);
    }
}

const jogador = new Jogador(1, 1);
const camera = { x: 0, y: 0, largura: tamanhoCelula / 10, altura: tamanhoCelula / 10 };

function desenharLabirinto(cameraX, cameraY) {
    for (let i = 0; i < labirinto.length; i++) {
        for (let j = 0; j < labirinto[i].length; j++) {
            if (labirinto[i][j] === '#') {
                ctx.fillStyle = corParede;
                ctx.fillRect((j - cameraX) * tamanhoCelula, (i - cameraY) * tamanhoCelula, tamanhoCelula, tamanhoCelula);
            }
        }
    }
}

function limparTela() {
    ctx.fillStyle = corFundo;
    ctx.fillRect(0, 0, canvas.width, canvas.height);
}

function loopPrincipal() {
    limparTela();
    desenharLabirinto(camera.x, camera.y);
    jogador.desenhar(camera.x, camera.y);
}

document.addEventListener('keydown', (e) => {
    switch (e.key) {
        case 'ArrowLeft':
            jogador.mover(-1, 0);
            break;
        case 'ArrowRight':
            jogador.mover(1, 0);
            break;
        case 'ArrowUp':
            jogador.mover(0, -1);
            break;
        case 'ArrowDown':
            jogador.mover(0, 1);
            break;
        case 'h':
            window.location.href = "../index.html";
    }

    loopPrincipal();
});

loopPrincipal();